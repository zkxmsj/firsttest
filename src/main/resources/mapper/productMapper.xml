<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fastcampus.app.ProductDao">
	<select id="select" parameterType="int" resultType="ProductDto">
		 select *
		 from product
		 where pno = #{pno}
	</select>
	<insert id="insert" parameterType="ProductDto">
		insert into product(pno,productName,productPrice,productImg,productStock,productIntro,uuid,uploadpath,filename,category)
		values(${pno},#{productName},#{productPrice},#{productImg},#{productStock},#{productIntro},#{uuid},#{uploadPath},#{fileName},#{category})
	</insert>
	<select id="selectAll" resultType="ProductDto">
		 select *
		 from product
		 order by pno
	</select>
	<update id="update" parameterType="ProductDto">
        UPDATE product
        SET   productPrice = #{productPrice}
          , productImg = #{productImg}
        WHERE pno = #{pno}
    </update>
    <update id="updateStock" parameterType="map">
        UPDATE product
        SET   productStock = productStock + #{amount}
        WHERE pno = #{pno}
    </update>
    <delete id="delete" parameterType="int">
        DELETE FROM product WHERE pno = #{pno}
    </delete>
    <select id="relative" parameterType="String" resultType="ProductDto">
    	select * from product
    	where category = #{category}
		order by rand()
		limit 3
    </select>
    <select id="selectCategory" parameterType="String" resultType="ProductDto">
        select *
		 from product
        WHERE true
         <choose>
            <when test='category!="all"'>
                AND category = #{category}
            </when>
            
        </choose>
        ORDER BY pno asc
    </select>
    
    <select id="getCategory" resultType="CategoryDto">
    	select c.category,count(p.pno) count
		from product p,category c
		where c.category = p.category
		group by category;
    </select>
    <insert  id="insertCategory">
    	insert category(category)
    	values(#{category})
    </insert>
    <select id="searchProduct" parameterType="String" resultType="ProductDto">
    	select *
    	from product
    	where productName LIKE concat('%', #{productName}, '%')
    </select>
    <update id="updateCount" parameterType="map">
    	update product
    	set sellcount = sellcount + #{amount}
    	where pno = #{pno}
    </update>
    <select id="getProductCount" resultType="ProductDto">
    	select * from product
		order by sellcount desc
		limit 5	;
    </select>
</mapper>